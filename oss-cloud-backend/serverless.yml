service: oss-cloud-backend

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, local}
  environment: ${file(./config/${self:provider.stage}.yml)}
    #GITHUB_ACCESS_TOKEN: ${file(./config/${self:provider.stage}.yml):GITHUB_ACCESS_TOKEN} 
    #SCHEDULER_RATE: ${file(./config/${self:provider.stage}.yml):SCHEDULER_RATE}
    #ENDPOINT: ${file(./config/${self:provider.stage}.yml):ENDPOINT}
    #PORT: ${file(./config/${self:provider.stage}.yml):PORT}
    #DATABASE: ${file(./config/${self:provider.stage}.yml):DATEBASE}
    #USER: ${file(./config/${self:provider.stage}.yml):USER}
    #PASSWORD: ${file(./config/${self:provider.stage}.yml):PASSWORD}


plugins:
  - serverless-offline-scheduler
  #- serverless-dotenv-plugin
  - serverless-offline

functions:
  addContributor:
    handler: handler.addContributor
    events:
      - http:
          path: addContributor
          method: post

  getContributors:
    handler: handler.getContributors
    events:
      - http:
          path: contributors
          method: get

  updatePullRequests:
    handler: handler.updatePullRequests
    events: # http event for testing, will probably change later
      # TODO - add scheduling
      - http:
          path: updatePullRequests
          method: get
      - schedule:
          rate: rate(${self:provider.environment.SCHEDULER_RATE})

  getContributions:
    handler: handler.getContributions
    events:
      - http:
          path: contributions
          method: get
  
  updateContributionStatus:
    handler: handler.updateContributionStatus
    events:
      - http:
          path: contributionStatus
          method: post

  contributorVisibleContributions:
    handler: handler.getVisibleUserContributions
    events:
      - http:
          path: contributorVisible
          method: post
      
