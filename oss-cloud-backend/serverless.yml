service: oss-cloud-backend

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-2
  stage: ${opt:stage, local}
  environment: 
    MYSQL_ENDPOINT: ${ssm:MYSQL_ENDPOINT}
    MYSQL_PORT: ${ssm:MYSQL_PORT}
    MYSQL_DATABASE: ${ssm:MYSQL_DATABASE}
    MYSQL_USER: ${ssm:MYSQL_USER}
    MYSQL_PASSWORD: ${ssm:MYSQL_PASSWORD}
    GITHUB_APP_ID: ${ssm:/oss-cloud/prod/github-app-id~true}
    GITHUB_APP_PRIVATE_KEY: ${ssm:/oss-cloud/prod/github-app-private-key~true}
    GITHUB_APP_INSTALLATION_ID: ${ssm:/oss-cloud/prod/github-app-installation-id~true}
    GITHUB_INSTALL_USER: ${ssm:GITHUB_INSTALL_USER} # username of a user that installed the app
    SCHEDULER_RATE: ${file(./config/${self:provider.stage}.yml):SCHEDULER_RATE}
    AUTH_REGION: ${ssm:AUTH_REGION}
    AUTH_AWS_ACCOUNT_ID: ${ssm:AUTH_AWS_ACCOUNT_ID}
    AUTH_USER_POOL_ID: ${ssm:AUTH_USER_POOL_ID}

plugins:
  - serverless-offline-scheduler
  - serverless-offline-dotenv
  - serverless-offline

functions:
  addContributor:
    handler: handler.addContributor
    events:
      - http:
          path: addContributor
          method: post
          cors: true


  getContributors:
    handler: handler.getContributors
    events:
      - http:
          path: contributors
          method: get
          cors: true

  getContributions:
    handler: handler.getContributions
    events:
      - http:
          path: contributions
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.environment.AUTH_REGION}:${self:provider.environment.AUTH_AWS_ACCOUNT_ID}:userpool/${self:provider.environment.AUTH_USER_POOL_ID}

  contributorVisibleContributions:
    handler: handler.getVisibleUserContributions
    events:
      - http:
          path: contributorVisible
          method: get
          cors: true
  
  updateNextContributor:
    handler: handler.updateNextContributor
    events:
      - schedule:
          rate: rate(${self:provider.environment.SCHEDULER_RATE})
      
            
  updateContributionStatus:
    handler: handler.updateContributionStatus
    events:
      - http:
          path: contributionStatus
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.environment.AUTH_REGION}:${self:provider.environment.AUTH_AWS_ACCOUNT_ID}:userpool/${self:provider.environment.AUTH_USER_POOL_ID}
